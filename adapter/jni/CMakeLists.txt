project(spvadapterjni VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_VERBOSE_MAKEFILE TRUE)

if(NOT DEFINED JAVA_HOME)
  message(STATUS "JAVA_HOME not set, will try to find JAVA automatically. Please set JAVA_HOME manually if get error on java related projects.")
endif()

find_package(Java COMPONENTS Runtime Development)
if(NOT Java_FOUND)
  message(FATAL_ERROR "Java runtime or development package not found.")
endif()

find_package(JNI)
if(NOT JNI_FOUND)
  message(FATAL_ERROR "Java JNI package not found.")
endif()

include(ProjectDefaults)

# JNI wrapper was generated by SWIG
# swig -java -module SPVAdapter \
#       -package org.elastos.did.adapter \
#       -outdir java/org/elastos/did/adapter \
#       -o spvadapter_wrap.c \
#       spvadapter.i

set(SRC
    spvadapter_wrap.c)

set(LIBS
    spvadapter-static
    spvsdk
    ssl
    crypto
    curl
    sqlite3
    fruit
    spdlog
    boost_system
    boost_thread
    boost_filesystem)

set(SYSTEM_LIBS
    z)

if(LINUX OR DARWIN)
set(SYSTEM_LIBS
    ${SYSTEM_LIBS}
    resolv)
endif()

include_directories(
    BEFORE
    ../spvadapter
    ${JNI_INCLUDE_DIRS}
    ${PROJECT_INT_DIST_DIR}/include)

if(DARWIN)
    set(CMAKE_SHARED_LIBRARY_SUFFIX .jnilib)
endif()

if(WIN32)
    add_definitions(
        -DWIN32_LEAN_AND_MEAN
        -D_CRT_SECURE_NO_WARNINGS
        -D_CRT_NONSTDC_NO_WARNINGS)

    # Force source code encoding to utf-8
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /utf-8")
endif()

link_directories(
    ${JDK_HOME}/lib
    ${PROJECT_INT_DIST_DIR}/lib)

set(SPVADAPTERJNI_DEPENDS spvadapter)

add_library(spvadapterjni SHARED ${SRC})
add_dependencies(spvadapterjni ${SPVADAPTERJNI_DEPENDS})

set_target_properties(spvadapterjni PROPERTIES
    OUTPUT_NAME spvadapterjni)

if(WIN32)
    set_target_properties(spvadapterjni PROPERTIES LINK_FLAGS /FORCE:MULTIPLE)
endif()

target_link_libraries(spvadapterjni ${JNI_LIBRARIES} ${LIBS} ${SYSTEM_LIBS})

install(TARGETS spvadapterjni
    RUNTIME DESTINATION "bin"
    ARCHIVE DESTINATION "lib"
    LIBRARY DESTINATION "lib")
